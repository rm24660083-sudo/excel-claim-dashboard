import streamlit as st
import pandas as pd
import plotly.express as px

st.title("üìä SUP Defect & Grade Analysis + AI Advisor")

uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    # --- ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á" in df.columns:
        df["ShipDate"] = pd.to_datetime(df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á"], errors="coerce", dayfirst=True)
    elif "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å" in df.columns:
        df["ShipDate"] = pd.to_datetime(df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å"], errors="coerce", dayfirst=True)

    df["Month"] = df["ShipDate"].dt.month
    df["Quarter"] = df["ShipDate"].dt.quarter

    # --- 1. SUP ‚Üí Defect ---
    st.subheader("üîç ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ SUP")
    sup_defect = df.groupby(["SUP","Defect"]).size().reset_index(name="Count")
    st.dataframe(sup_defect)

    fig = px.bar(sup_defect, x="SUP", y="Count", color="Defect",
                 title="Defect Breakdown by SUP", barmode="stack")
    st.plotly_chart(fig, use_container_width=True)

    # --- 2. SUP ‚Üí Quarter ---
    st.subheader("üìÖ ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™")
    sup_quarter = df.groupby(["Quarter","SUP"]).size().reset_index(name="Count")
    st.dataframe(sup_quarter)

    fig2 = px.bar(sup_quarter, x="Quarter", y="Count", color="SUP",
                  title="Defect Count by Quarter", barmode="group")
    st.plotly_chart(fig2, use_container_width=True)

    # --- 3. SUP ‚Üí Grade ---
    st.subheader("üì¶ ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ SUP")
    if "Grade" in df.columns:
        sup_grade = df.groupby(["SUP","Grade"]).size().reset_index(name="Count")
        st.dataframe(sup_grade)

        fig3 = px.bar(sup_grade, x="SUP", y="Count", color="Grade",
                      title="Defect by SUP and Grade", barmode="stack")
        st.plotly_chart(fig3, use_container_width=True)

    # --- 4. AI Advisor ---
    st.subheader("üß† AI ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞")
    latest_q = df["Quarter"].max()
    q_data = df[df["Quarter"] == latest_q]
    sup_risk = q_data["SUP"].value_counts().head(3)

    for sup, count in sup_risk.items():
        st.write(f"‚ö†Ô∏è SUP {sup} ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î {count} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô Q{latest_q} ‚Äî ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î")

    st.write("‚úÖ ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:")
    st.write("- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SUP ‡∏ó‡∏µ‡πà‡∏°‡∏µ defect ‡∏ã‡πâ‡∏≥ ‡πÜ ‡πÉ‡∏ô Quarter ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
    st.write("- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå defect type ‡∏ó‡∏µ‡πà recurring ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥ CAPA (Corrective Action)")
    st.write("- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà defect ‡∏™‡∏π‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©")
