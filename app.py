import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="üìä SUP Dashboard", layout="wide")
st.title("üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå SUP ‡πÅ‡∏•‡∏∞ Defect")

uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    # Mapping ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    rename_map = {
        "SUP": "SUP",
        "‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î": "Defect",
        "‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏Å‡∏£‡∏°": "Grade",
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á": "ShipDate",
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å": "IssueDate",
    }
    df = df.rename(columns={c: rename_map.get(c, c) for c in df.columns})

    # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if "ShipDate" in df.columns:
        df["ShipDate"] = pd.to_datetime(df["ShipDate"], errors="coerce", dayfirst=True)
        base_col = "ShipDate"
    elif "IssueDate" in df.columns:
        df["IssueDate"] = pd.to_datetime(df["IssueDate"], errors="coerce", dayfirst=True)
        base_col = "IssueDate"
    else:
        base_col = None

    if base_col:
        df["Month"] = df[base_col].dt.month
        df["Quarter"] = df[base_col].dt.quarter

    # -----------------------------
    # Section 1: Overview
    # -----------------------------
    st.header("üìå ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô SUP", df["SUP"].nunique())
    with col2:
        st.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Defect ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", len(df))
    with col3:
        st.metric("SUP ‡∏ó‡∏µ‡πà defect ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î", df["SUP"].value_counts().idxmax())

    # -----------------------------
    # Section 2: SUP & Defect
    # -----------------------------
    st.header("üîç ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ SUP")
    sup_defect = df.groupby(["Quarter","SUP","Defect"]).size().reset_index(name="Count")
    fig1 = px.bar(sup_defect, x="SUP", y="Count", color="Defect",
                  facet_col="Quarter", barmode="stack",
                  title="Defect Breakdown by SUP (Quarterly)")
    st.plotly_chart(fig1, use_container_width=True)
    st.dataframe(sup_defect, hide_index=True)

    # -----------------------------
    # Section 3: SUP & Grade
    # -----------------------------
    st.header("üì¶ ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ SUP")
    sup_grade = df.groupby(["SUP","Grade","Defect"]).size().reset_index(name="Count")
    fig2 = px.bar(sup_grade, x="SUP", y="Count", color="Defect",
                  facet_col="Grade", barmode="stack",
                  title="Defect by SUP and Grade")
    st.plotly_chart(fig2, use_container_width=True)
    st.dataframe(sup_grade, hide_index=True)

    # -----------------------------
    # Section 4: AI Advisor
    # -----------------------------
    st.header("üß† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥")
    st.info("""
    - üè≠ SUP A ‡∏°‡∏µ defect ‡∏à‡∏∏‡∏î‡∏î‡∏≥‡∏ã‡πâ‡∏≥‡πÉ‡∏ô Q4 ‚Üí ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö  
    - üì¶ ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏Å‡∏£‡∏° 120g ‡∏°‡∏µ defect ‡∏™‡∏π‡∏á ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö  
    - üìÖ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏Ñ‡∏ß‡∏£‡πÇ‡∏ü‡∏Å‡∏±‡∏™ SUP A ‡πÅ‡∏•‡∏∞ defect ‡∏à‡∏∏‡∏î‡∏î‡∏≥  
    """)
