def generate_ai_tips(df):
    tips = []

    # ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    required_cols = ["SUP", "Defect", "Month", "Week"]
    missing = [c for c in required_cols if c not in df.columns]
    if missing:
        tips.append(f"‚ö†Ô∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡∏≤‡∏î: {', '.join(missing)} ‚Äî ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠ mapping ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå")

    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if "ShipDate" in df.columns and df["ShipDate"].isna().mean() > 0.2:
        tips.append("‚ö†Ô∏è ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á (ShipDate) ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å ‚Äî ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠")

    # ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™
    if "Month" in df.columns:
        oct_count = int((df["Month"] == 10).sum())
        if oct_count > 0:
            tips.append(f"üîé ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°‡∏û‡∏ö‡πÄ‡∏Ñ‡∏™ {oct_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‚Äî ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô Q4")
    if "Quarter" in df.columns:
        q4_count = int((df["Quarter"] == 4).sum())
        if q4_count > 0:
            tips.append(f"üîé Q4 ‡∏û‡∏ö‡πÄ‡∏Ñ‡∏™ {q4_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‚Äî ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô peak")

    # ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö defect ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ã‡πâ‡∏≥
    if "Defect" in df.columns:
        common = df["Defect"].value_counts().head(3).index.tolist()
        if common:
            tips.append(f"üìå Defect ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏°‡∏≤‡∏Å: {', '.join(common)} ‚Äî ‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏°‡∏≤‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏")

    # ‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏Ñ‡∏™‡∏™‡∏π‡∏á
    if "SUP" in df.columns:
        sup_count = df["SUP"].value_counts()
        if not sup_count.empty:
            worst_sup = sup_count.idxmax()
            tips.append(f"üè≠ SUP ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏Ñ‡∏™‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: {worst_sup} ‚Äî ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏≥ CAPA ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á KPI ‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™")

    # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏ß‡πâ‡∏≤‡∏á/‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å outlier
    for col in ["Width", "Weight"]:
        if col in df.columns:
            from analysis import iqr_outliers
            outliers, (low, high) = iqr_outliers(df[col])
            if outliers > 0:
                tips.append(f"üìà ‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡πÉ‡∏ô {col}: {outliers} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‚Äî ‡∏ä‡πà‡∏ß‡∏á‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á ~ {low:.2f} ‡∏ñ‡∏∂‡∏á {high:.2f}")

    # ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥
    tips.append("‚úÖ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡πâ‡∏á validation ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‡∏ï‡∏£‡∏ß‡∏à‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå, ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•")
    tips.append("üß™ ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö A/B ‡∏Å‡∏±‡∏ö‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î defect ‡∏™‡∏π‡∏á ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå/‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™")
    return tips